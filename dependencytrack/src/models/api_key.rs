/*
 * Dependency-Track API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.11.7
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiKey {
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    #[serde(rename = "lastUsed", skip_serializing_if = "Option::is_none")]
    pub last_used: Option<String>,
    #[serde(rename = "maskedKey", skip_serializing_if = "Option::is_none")]
    pub masked_key: Option<String>,
}

impl ApiKey {
    pub fn new(key: String) -> ApiKey {
        ApiKey {
            key,
            comment: None,
            created: None,
            last_used: None,
            masked_key: None,
        }
    }
}


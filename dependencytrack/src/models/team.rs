/*
 * Dependency-Track API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.11.7
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Team {
    #[serde(rename = "uuid")]
    pub uuid: uuid::Uuid,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "apiKeys", skip_serializing_if = "Option::is_none")]
    pub api_keys: Option<Vec<models::ApiKey>>,
    #[serde(rename = "ldapUsers", skip_serializing_if = "Option::is_none")]
    pub ldap_users: Option<Vec<models::LdapUser>>,
    #[serde(rename = "managedUsers", skip_serializing_if = "Option::is_none")]
    pub managed_users: Option<Vec<models::ManagedUser>>,
    #[serde(rename = "oidcUsers", skip_serializing_if = "Option::is_none")]
    pub oidc_users: Option<Vec<models::OidcUser>>,
    #[serde(rename = "mappedLdapGroups", skip_serializing_if = "Option::is_none")]
    pub mapped_ldap_groups: Option<Vec<models::MappedLdapGroup>>,
    #[serde(rename = "mappedOidcGroups", skip_serializing_if = "Option::is_none")]
    pub mapped_oidc_groups: Option<Vec<models::MappedOidcGroup>>,
    #[serde(rename = "permissions", skip_serializing_if = "Option::is_none")]
    pub permissions: Option<Vec<models::Permission>>,
}

impl Team {
    pub fn new(uuid: uuid::Uuid) -> Team {
        Team {
            uuid,
            name: None,
            api_keys: None,
            ldap_users: None,
            managed_users: None,
            oidc_users: None,
            mapped_ldap_groups: None,
            mapped_oidc_groups: None,
            permissions: None,
        }
    }
}


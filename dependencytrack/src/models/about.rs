/*
 * Dependency-Track API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.11.7
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct About {
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    #[serde(rename = "uuid", skip_serializing_if = "Option::is_none")]
    pub uuid: Option<String>,
    #[serde(rename = "systemUuid", skip_serializing_if = "Option::is_none")]
    pub system_uuid: Option<String>,
    #[serde(rename = "application", skip_serializing_if = "Option::is_none")]
    pub application: Option<String>,
    #[serde(rename = "framework", skip_serializing_if = "Option::is_none")]
    pub framework: Option<Box<models::Framework>>,
}

impl About {
    pub fn new() -> About {
        About {
            version: None,
            timestamp: None,
            uuid: None,
            system_uuid: None,
            application: None,
            framework: None,
        }
    }
}


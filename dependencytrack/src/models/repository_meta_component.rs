/*
 * Dependency-Track API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.11.7
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryMetaComponent {
    #[serde(rename = "repositoryType")]
    pub repository_type: RepositoryType,
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "latestVersion")]
    pub latest_version: String,
    #[serde(rename = "published", skip_serializing_if = "Option::is_none")]
    pub published: Option<String>,
    #[serde(rename = "lastCheck")]
    pub last_check: String,
}

impl RepositoryMetaComponent {
    pub fn new(repository_type: RepositoryType, name: String, latest_version: String, last_check: String) -> RepositoryMetaComponent {
        RepositoryMetaComponent {
            repository_type,
            namespace: None,
            name,
            latest_version,
            published: None,
            last_check,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RepositoryType {
    #[serde(rename = "CPAN")]
    Cpan,
    #[serde(rename = "MAVEN")]
    Maven,
    #[serde(rename = "NPM")]
    Npm,
    #[serde(rename = "GEM")]
    Gem,
    #[serde(rename = "PYPI")]
    Pypi,
    #[serde(rename = "NUGET")]
    Nuget,
    #[serde(rename = "HEX")]
    Hex,
    #[serde(rename = "COMPOSER")]
    Composer,
    #[serde(rename = "CARGO")]
    Cargo,
    #[serde(rename = "GO_MODULES")]
    GoModules,
    #[serde(rename = "GITHUB")]
    Github,
    #[serde(rename = "HACKAGE")]
    Hackage,
    #[serde(rename = "NIXPKGS")]
    Nixpkgs,
    #[serde(rename = "UNSUPPORTED")]
    Unsupported,
}

impl Default for RepositoryType {
    fn default() -> RepositoryType {
        Self::Cpan
    }
}


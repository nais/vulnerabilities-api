/*
 * Dependency-Track API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.11.7
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AffectedComponent {
    #[serde(rename = "identityType", skip_serializing_if = "Option::is_none")]
    pub identity_type: Option<IdentityType>,
    #[serde(rename = "identity", skip_serializing_if = "Option::is_none")]
    pub identity: Option<String>,
    #[serde(rename = "versionType", skip_serializing_if = "Option::is_none")]
    pub version_type: Option<VersionType>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "versionEndExcluding", skip_serializing_if = "Option::is_none")]
    pub version_end_excluding: Option<String>,
    #[serde(rename = "versionEndIncluding", skip_serializing_if = "Option::is_none")]
    pub version_end_including: Option<String>,
    #[serde(rename = "versionStartExcluding", skip_serializing_if = "Option::is_none")]
    pub version_start_excluding: Option<String>,
    #[serde(rename = "versionStartIncluding", skip_serializing_if = "Option::is_none")]
    pub version_start_including: Option<String>,
    #[serde(rename = "uuid", skip_serializing_if = "Option::is_none")]
    pub uuid: Option<uuid::Uuid>,
    #[serde(rename = "affectedVersionAttributions", skip_serializing_if = "Option::is_none")]
    pub affected_version_attributions: Option<Vec<models::AffectedVersionAttribution>>,
}

impl AffectedComponent {
    pub fn new() -> AffectedComponent {
        AffectedComponent {
            identity_type: None,
            identity: None,
            version_type: None,
            version: None,
            version_end_excluding: None,
            version_end_including: None,
            version_start_excluding: None,
            version_start_including: None,
            uuid: None,
            affected_version_attributions: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IdentityType {
    #[serde(rename = "CPE")]
    Cpe,
    #[serde(rename = "PURL")]
    Purl,
}

impl Default for IdentityType {
    fn default() -> IdentityType {
        Self::Cpe
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum VersionType {
    #[serde(rename = "EXACT")]
    Exact,
    #[serde(rename = "RANGE")]
    Range,
}

impl Default for VersionType {
    fn default() -> VersionType {
        Self::Exact
    }
}


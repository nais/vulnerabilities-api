/*
 * Dependency-Track API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.11.7
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DataClassification {
    #[serde(rename = "direction", skip_serializing_if = "Option::is_none")]
    pub direction: Option<Direction>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl DataClassification {
    pub fn new() -> DataClassification {
        DataClassification {
            direction: None,
            name: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Direction {
    #[serde(rename = "INBOUND")]
    Inbound,
    #[serde(rename = "OUTBOUND")]
    Outbound,
    #[serde(rename = "BI_DIRECTIONAL")]
    BiDirectional,
    #[serde(rename = "UNKNOWN")]
    Unknown,
}

impl Default for Direction {
    fn default() -> Direction {
        Self::Inbound
    }
}


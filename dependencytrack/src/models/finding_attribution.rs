/*
 * Dependency-Track API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.11.7
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FindingAttribution {
    #[serde(rename = "attributedOn")]
    pub attributed_on: String,
    #[serde(rename = "analyzerIdentity", skip_serializing_if = "Option::is_none")]
    pub analyzer_identity: Option<AnalyzerIdentity>,
    #[serde(rename = "component")]
    pub component: Box<models::Component>,
    #[serde(rename = "vulnerability")]
    pub vulnerability: Box<models::Vulnerability>,
    #[serde(rename = "alternateIdentifier", skip_serializing_if = "Option::is_none")]
    pub alternate_identifier: Option<String>,
    #[serde(rename = "referenceUrl", skip_serializing_if = "Option::is_none")]
    pub reference_url: Option<String>,
    #[serde(rename = "uuid")]
    pub uuid: uuid::Uuid,
}

impl FindingAttribution {
    pub fn new(attributed_on: String, component: models::Component, vulnerability: models::Vulnerability, uuid: uuid::Uuid) -> FindingAttribution {
        FindingAttribution {
            attributed_on,
            analyzer_identity: None,
            component: Box::new(component),
            vulnerability: Box::new(vulnerability),
            alternate_identifier: None,
            reference_url: None,
            uuid,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AnalyzerIdentity {
    #[serde(rename = "INTERNAL_ANALYZER")]
    InternalAnalyzer,
    #[serde(rename = "OSSINDEX_ANALYZER")]
    OssindexAnalyzer,
    #[serde(rename = "NPM_AUDIT_ANALYZER")]
    NpmAuditAnalyzer,
    #[serde(rename = "VULNDB_ANALYZER")]
    VulndbAnalyzer,
    #[serde(rename = "SNYK_ANALYZER")]
    SnykAnalyzer,
    #[serde(rename = "TRIVY_ANALYZER")]
    TrivyAnalyzer,
    #[serde(rename = "NONE")]
    None,
}

impl Default for AnalyzerIdentity {
    fn default() -> AnalyzerIdentity {
        Self::InternalAnalyzer
    }
}


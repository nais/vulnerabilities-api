/*
 * Dependency-Track API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.11.7
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ServiceComponent {
    #[serde(rename = "provider", skip_serializing_if = "Option::is_none")]
    pub provider: Option<Box<models::OrganizationalEntity>>,
    #[serde(rename = "group", skip_serializing_if = "Option::is_none")]
    pub group: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "endpoints", skip_serializing_if = "Option::is_none")]
    pub endpoints: Option<Vec<String>>,
    #[serde(rename = "authenticated", skip_serializing_if = "Option::is_none")]
    pub authenticated: Option<bool>,
    #[serde(rename = "crossesTrustBoundary", skip_serializing_if = "Option::is_none")]
    pub crosses_trust_boundary: Option<bool>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Vec<models::DataClassification>>,
    #[serde(rename = "externalReferences", skip_serializing_if = "Option::is_none")]
    pub external_references: Option<Vec<models::ExternalReference>>,
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<Box<models::ServiceComponent>>,
    #[serde(rename = "children", skip_serializing_if = "Option::is_none")]
    pub children: Option<Vec<models::ServiceComponent>>,
    #[serde(rename = "vulnerabilities", skip_serializing_if = "Option::is_none")]
    pub vulnerabilities: Option<Vec<models::Vulnerability>>,
    #[serde(rename = "project")]
    pub project: Box<models::Project>,
    #[serde(rename = "lastInheritedRiskScore", skip_serializing_if = "Option::is_none")]
    pub last_inherited_risk_score: Option<f64>,
    #[serde(rename = "notes", skip_serializing_if = "Option::is_none")]
    pub notes: Option<String>,
    #[serde(rename = "uuid")]
    pub uuid: uuid::Uuid,
    #[serde(rename = "bomRef", skip_serializing_if = "Option::is_none")]
    pub bom_ref: Option<String>,
}

impl ServiceComponent {
    pub fn new(project: models::Project, uuid: uuid::Uuid) -> ServiceComponent {
        ServiceComponent {
            provider: None,
            group: None,
            name: None,
            version: None,
            description: None,
            endpoints: None,
            authenticated: None,
            crosses_trust_boundary: None,
            data: None,
            external_references: None,
            parent: None,
            children: None,
            vulnerabilities: None,
            project: Box::new(project),
            last_inherited_risk_score: None,
            notes: None,
            uuid,
            bom_ref: None,
        }
    }
}


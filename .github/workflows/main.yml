name: Vulnerabilities-api CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-lint-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: cargo-registry-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-registry-${{ runner.os }}-

      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: cargo-git-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-git-${{ runner.os }}-

      - name: Cache Cargo build artifacts
        uses: actions/cache@v4
        with:
          path: target
          key: cargo-target-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-target-${{ runner.os }}-

      - name: Get Protoc version from .tool-versions
        id: get_version
        run: |
          protoc_version=$(grep '^protoc' .tool-versions | awk '{print $2}')
          echo "PROTOCOL_BUFFERS_VERSION=$protoc_version" >> $GITHUB_ENV

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: ${{ env.PROTOCOL_BUFFERS_VERSION }}

      - name: Build
        run: make build

      - name: Run tests
        run: make test

      - name: Lint with Clippy
        run: make lint

      - name: Check formatting
        run: make fmt-check